https://github.com/kate98981/JSON
 JSON
 4. Создать внешний репозиторий c названием JSON.
	create a new repository на сайте github.com
 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/kate98981/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
	touch "new.json"
 7. Добавить файл под гит.
	git add new.json
 8. Закоммитить файл.
	git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий.
	git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	vim new.json
	{
    		"name": "Kate Ore",
    		"age": 23,
    		"pet_count": 3,
    		"salary": 30000
	}
	:wq
 11. Отправить изменения на внешний репозиторий.
	git commit -am "changed new.json"
	git push
 12. Создать файл preferences.json
	touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, 
любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	vim preferences.json
	{
        	"film": "The Girl(1961)",
        	"serial": "Anne",
        	"food": "Dumplings",
        	"season": "summer",
        	"country": "UK"
	}
	:wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	vim skills.json
	{
		"skills":["Linux", "Git", "Postman","DevTools", "SQL"]
	}
	:wq
 15. Отправить сразу 2 файла на внешний репозиторий.
	git add .
	git commit -m "add preferences.json. skill.json"
	git push
 16. На веб интерфейсе создать файл bug_report.json.
	добавление нового файла на github
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	на github "add bug_report.json"
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull
_______________________________________
https://github.com/kate98981/XML
XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/kate98981/XML.git
 23. Внутри локального XML создать файл “new.xml”.
	touch new.xml
 24. Добавить файл под гит.
	git add new.xml
 25. Закоммитить файл.
	git commit -m "add file"
 26. Отправить файл на внешний GitHub репозиторий.
	git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	vim new.xml
<?xml version="1.0"?>
	<req>
	<name>Kate Ore</name>
	<age>23</age>
	<pet_count>3</pet_count>
	<salary>30000</salary>
	</req>
	:wq
 28. Отправить изменения на внешний репозиторий.
	git commit -am "changed file"
	git push
 29. Создать файл preferences.xml
	touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	vim preferences.xml
<?xml version="1.0"?>
	<req>
    	<film>The Girl(1961)</film>
    	<serial>Anne</serial>
    	<food>Dumplings</food>
    	<season>summer</season>
    	<country>UK</country>
	</req>
	:wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	vim sklls.xml
<?xml version="1.0"?>
	<skills>
    	<p>Linux</p>
    	<p>Git</p>
    	<p>Postman</p>
    	<p>DevTools</p>
    	<p>SQL</p>
	</skills>
	:wq
 32. Сделать коммит в одну строку.
	git add .
	git commit -am "add preferences.xml, sklls.xml"
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
	git pull
_______________
https://github.com/kate98981/TXT
TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
	clone https://github.com/kate98981/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
	touch new.txt
 4. Добавить файл под гит.
	git add new.txt
 5. Закоммитить файл.
	git commit -m "add new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
	git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	vim new.txt
	Name:Kate Ore
	Age:23
	Pet_count: 3
	Salary: 30000
	:wq
 8. Отправить изменения на внешний репозиторий.
	git commit -am "changed file"
 9. Создать файл preferences.txt
	vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	Любимый фильм - Девчата, любимый сериал - Энн, любимая еда - пельмени, любимое время года - лето, страна которую хотели бы посетить - Великобритания
	:wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	vim sklls.txt
	Linux, Git, Postman,DevTools, SQL
	:wq
 12. Сделать коммит в одну строку.
	git add .
	git commit -m "add files"
 13. Отправить сразу 2 файла на внешний репозиторий.
	git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
	git pull